# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  build-tailwind:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    defaults:
      run:
        working-directory: ./templates/base+tailwind
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: install python requirements
        run: pip install -r requirements.txt
      - run: npm i
      - name: Install playwright browsers
        run: npx playwright install --with-deps
      - run: npm run build --if-present
      - run: npm run test:unit
      - run: npm run test
  
  build-base:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    defaults:
      run:
        working-directory: ./templates/base
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: install python requirements
        run: pip install -r requirements.txt
      - run: npm i
      - name: Install playwright browsers
        run: npx playwright install --with-deps
      - run: npm run build --if-present
      - run: npm run test:unit
      - run: npm run test
